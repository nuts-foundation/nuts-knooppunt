# Main NGINX configuration for Knooppunt PEP

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_js_module.so;

# Environment variables used in NGINX config (via envsubst template substitution):
# - FHIR_BACKEND_HOST, FHIR_BACKEND_PORT
# - KNOOPPUNT_PDP_HOST, KNOOPPUNT_PDP_PORT
# These are substituted at container startup and don't need 'env' directive

# Environment variables used in NJS JavaScript code (via process.env):
# These MUST be declared with 'env' directive to be accessible in authorize.js
env DATA_HOLDER_ORGANIZATION_URA;
env DATA_HOLDER_FACILITY_TYPE;
env REQUESTING_FACILITY_TYPE;
env PURPOSE_OF_USE;
env EVENT_CODE;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format authz '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Request body size limit (prevent memory exhaustion)
    client_max_body_size 10m;
    client_body_buffer_size 128k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting zones (protect against DoS/brute force)
    limit_req_zone $binary_remote_addr zone=pep_limit:10m rate=100r/s;

    # Include all config files from conf.d
    include /etc/nginx/conf.d/*.conf;
}
