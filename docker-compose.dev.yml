services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: hapi-postgres
    environment:
      POSTGRES_DB: hapi
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d hapi"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - nuts-knooppunt

  # HAPI FHIR Server
  hapi-fhir:
    image: hapiproject/hapi:latest
    container_name: hapi-fhir-server
    ports:
      - "7050:7050"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hapi
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      HAPI_FHIR_SERVER_ADDRESS: http://localhost:7050/fhir
      HAPI_FHIR_ALLOW_EXTERNAL_REFERENCES: "true"
      HAPI_FHIR_ALLOW_PLACEHOLDER_REFERENCES: "true"
      HAPI_FHIR_REUSE_CACHED_SEARCH_RESULTS_MILLIS: "60000"
      HAPI_FHIR_VALIDATION_FLAG: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: "ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgresDialect"
    volumes:
      - hapi-data:/data
    restart: unless-stopped
    networks:
      - nuts-knooppunt
    configs:
      - source: hapi-config
        target: /app/config/application.yaml

volumes:
  postgres-data:
  hapi-data:

networks:
  nuts-knooppunt:
    driver: bridge

configs:
  hapi-config:
    file: ./config/hapi.application.dev.yml
