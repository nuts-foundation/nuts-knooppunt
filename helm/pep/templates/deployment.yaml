apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pep.fullname" . }}
  labels:
    {{- include "pep.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pep.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pep.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pep.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: FHIR_BACKEND_HOST
            value: {{ .Values.env.fhirBackendHost | quote }}
          - name: FHIR_BACKEND_PORT
            value: {{ .Values.env.fhirBackendPort | quote }}
          - name: KNOOPPUNT_PDP_HOST
            value: {{ .Values.env.knooppuntPdpHost | quote }}
          - name: KNOOPPUNT_PDP_PORT
            value: {{ .Values.env.knooppuntPdpPort | quote }}
          - name: DATA_HOLDER_ORGANIZATION_URA
            value: {{ .Values.env.dataHolderOrganizationUra | quote }}
          - name: DATA_HOLDER_FACILITY_TYPE
            value: {{ .Values.env.dataHolderFacilityType | quote }}
          - name: REQUESTING_FACILITY_TYPE
            value: {{ .Values.env.requestingFacilityType | quote }}
          - name: PURPOSE_OF_USE
            value: {{ .Values.env.purposeOfUse | quote }}
          - name: EVENT_CODE
            value: {{ .Values.env.eventCode | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
