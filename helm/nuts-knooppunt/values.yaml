# Default values for nuts-knooppunt.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/nuts-foundation/nuts-knooppunt
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.2"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080
  internalPort: 8081

gateway:
  enabled: false
  className: ""
  name: nuts-knooppunt

# This block is for setting up the httpRoute for more information can be found here: https://gateway-api.sigs.k8s.io/api-types/httproute/
httpRoute:
  enabled: false
  hostnames:
    - nuts-knooppunt.localhost
  parentRefs:
    - name: nuts-knooppunt

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /status
    port: internal
readinessProbe:
  httpGet:
    path: /status
    port: internal

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# PostgreSQL configuration

# Hapi FHIR configuration
fhir:
  enabled: false
  fullnameOverride: fhir
  postgres:
    enabled: true
  gateway:
    enabled: false
  database:
    storage:
      size: 5Gi

# NUTS Node configuration
# Set enabled: true to enable NUTS node deployment
nuts:
  enabled: false
  fullnameOverride: nuts
  # Environment variables for the NUTS node container
  # The NUTS_STORAGE_SQL_CONNECTION is automatically set from a converted database secret
  # CloudNativePG creates secrets with postgresql:// scheme, but NUTS node requires postgres://
  # A Helm hook job automatically converts the secret format on install/upgrade
  #
  # To configure: Create your own values file (e.g., my-values.yaml) and set:
  #   extraEnv:
  #     - name: NUTS_STORAGE_SQL_CONNECTION
  #       valueFrom:
  #         secretKeyRef:
  #           name: <your-release-name>-nuts-db-fixed
  #           key: uri
  #
  # Example for release name "my-nuts-knooppunt":
  extraEnv:
    - name: NUTS_STORAGE_SQL_CONNECTION
      valueFrom:
        secretKeyRef:
          name: RELEASE_NAME-nuts-db-fixed  # IMPORTANT: Update RELEASE_NAME to match your actual release name
          key: uri
  nuts:
    config:
      url: https://nuts.example.com  # Public URL of the NUTS node
      crypto:
        storage: fs  # Use filesystem storage for crypto keys (alternatives: vaultkv for Vault)
  data:
    persistedVolumeClaim:
      enabled: true
  database:
    storage:
      size: 5Gi
