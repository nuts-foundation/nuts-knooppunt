{{- if .Values.nuts.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
  labels:
    {{- include "nuts-knooppunt.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
  labels:
    {{- include "nuts-knooppunt.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
  labels:
    {{- include "nuts-knooppunt.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
subjects:
  - kind: ServiceAccount
    name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter-{{ .Release.Revision }}
  labels:
    {{- include "nuts-knooppunt.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      name: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
    spec:
      serviceAccountName: {{ include "nuts-knooppunt.fullname" . }}-secret-converter
      restartPolicy: Never
      containers:
        - name: secret-converter
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              # Wait for the CloudNativePG secret to be created
              echo "Waiting for CloudNativePG secret..."
              while ! kubectl get secret {{ include "nuts-knooppunt.nuts.dbSecretName" . }} -n {{ .Release.Namespace }} 2>/dev/null; do
                sleep 2
              done

              # Get the original URI
              ORIGINAL_URI=$(kubectl get secret {{ include "nuts-knooppunt.nuts.dbSecretName" . }} -n {{ .Release.Namespace }} -o jsonpath='{.data.uri}' | base64 -d)

              # Convert postgresql:// to postgres://
              FIXED_URI=$(echo "$ORIGINAL_URI" | sed 's/^postgresql:\/\//postgres:\/\//')

              # Create or update the fixed secret
              kubectl create secret generic {{ include "nuts-knooppunt.fullname" . }}-nuts-db-fixed \
                --from-literal=uri="$FIXED_URI" \
                --dry-run=client -o yaml | kubectl apply -f -

              echo "Secret conversion completed successfully"
{{- end }}
