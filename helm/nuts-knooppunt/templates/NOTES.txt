{{- if .Values.nuts.enabled }}
================================================================================
NUTS Node Database Configuration
================================================================================

Database secrets:
  CloudNativePG secret: {{ include "nuts-knooppunt.nuts.dbSecretName" . }}
  Converted secret:     {{ include "nuts-knooppunt.fullname" . }}-nuts-db-fixed

A Helm hook automatically converts the postgresql:// URI to postgres:// format.

To verify the converted secret was created:

  kubectl get secret {{ include "nuts-knooppunt.fullname" . }}-nuts-db-fixed

{{- $hasDbConnection := false }}
{{- $expectedSecretName := printf "%s-nuts-db-fixed" (include "nuts-knooppunt.fullname" .) }}
{{- $dbConfigCorrect := false }}
{{- range .Values.nuts.extraEnv }}
  {{- if eq .name "NUTS_STORAGE_SQL_CONNECTION" }}
    {{- $hasDbConnection = true }}
    {{- if and .valueFrom .valueFrom.secretKeyRef }}
      {{- if eq .valueFrom.secretKeyRef.name $expectedSecretName }}
        {{- if eq .valueFrom.secretKeyRef.key "uri" }}
          {{- $dbConfigCorrect = true }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if not $hasDbConnection }}

⚠️  WARNING: Database connection not configured!

Configuration required:
  Create a custom values file (e.g., my-values.yaml) with your NUTS configuration.
  See values.yaml for examples of required settings including:
  - Database connection (extraEnv with NUTS_STORAGE_SQL_CONNECTION)
  - Public URL (nuts.config.url)
  - DID methods (nuts.config.didmethods)

  Expected database secret configuration:
    extraEnv:
      - name: NUTS_STORAGE_SQL_CONNECTION
        valueFrom:
          secretKeyRef:
            name: {{ $expectedSecretName }}
            key: uri

  Then upgrade your release:
    helm upgrade {{ .Release.Name }} . -f my-values.yaml

{{- else if not $dbConfigCorrect }}

⚠️  WARNING: Database connection configured incorrectly!

The NUTS_STORAGE_SQL_CONNECTION is set but doesn't reference the correct secret.

Expected configuration:
  extraEnv:
    - name: NUTS_STORAGE_SQL_CONNECTION
      valueFrom:
        secretKeyRef:
          name: {{ $expectedSecretName }}
          key: uri

  Update your values file and run:
    helm upgrade {{ .Release.Name }} . -f my-values.yaml

{{- end }}
================================================================================
{{- end }}

1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "nuts-knooppunt.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "nuts-knooppunt.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "nuts-knooppunt.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nuts-knooppunt.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
